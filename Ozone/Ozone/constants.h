#ifndef CONSTANTS_H
#define CONSTANTS_H

#include <cmath>

const long double
    // Ширина ячейки за ударной волной, м.
    DX1 = 0.000002,
    // Ширина ячейки перед ударной волной, м.
    DX2 = 0.000002,
    
    // Шаг по времени, с.
    DT  = 1.0e-11,
    
    // Давление за ударной волной, Па.
    P1 = 6543160.0,
    // Давление перед ударной волной, Па.
	P2 = 101325.0,

    // Плотность газа за ударной волной, кг м-3.
    RHO1 = 19.7335,
    // Плотность газа перед ударной волной, кг м-3.
    RHO2 = 1.96192,

    // Скорость газа за ударной волной в ЛСК, м с-1.
    U1 = 1719.59,
    // Скорость газа перед ударной волной в ЛСК, м с-1.
    U2 = 0.0,

    // Скорость поршня, м с-1.
    U_PISTON = 862.226,

    // Показатель адиабаты.
    GAMMA_FRONT        = 1.18356,
    GAMMA_AHEAD_FRONT  = 1.26791,
    //GAMMA_BEHIND_FRONT = 1.16749,
    GAMMA_BEHIND_FRONT = 1.17396,

    // Скорость волны, м с-1.
    D_C_J = 1 / RHO2 * sqrt((P1 - P2) / (1 / RHO2 - 1 / RHO1)),

    // Степень пересжатия: F = (D / D_C_J)^2.
    F = 1.0,
 
    // Используется для определения ширины ячейки,
    // левая граница которой совпадает с фронтом ударной волны.
    K = 0.5,

    // 1 физическая атмосфера, выраженная в паскалях.
    ONE_ATM = 101325.0,

    // 1 бар, выраженный в паскалях.
    ONE_BAR = 100000.0;

const int
    // Размер разностной сетки.
    N = 40000,
    // Число ячеек, содержащих ударную волну в начальный момент времени.
    L = 3,
    // Полное количество шагов по времени в расчете.
    TIMESTEPS = 4000000,
    // Количество временных шагов, через которые результаты записываются в файл.
    TIMEDIVISOR = 5000;

// Флаг, определяющий, решается ли задача Римана точно (значение true)
// или же в акустическом приближении.
const bool EXACT_RIEMANN_SOLVER = true;

// Точность нахождения давления на контактном разрыве.
const long double EPSILON = 1e-10;

const bool RESUME = false;
const int START = 1;

#endif